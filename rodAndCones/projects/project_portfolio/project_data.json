{
    "0": {
        "title": "Various Tools",
        "subTitle": "Various Tools Developed for 3d Apps",
        "description": {
            "motivation":"I actively develop tools to enhance the productivity and efficiency of myself and my teammates. I believe solving problems for even secondary concerns in 3d software applications such as accessiblity, improves the user experience considerably.",
            "technique":"I use Python as my main language and the PyQt Framework to develop the interfaces for the tools - the host application permitting. Likewise I use PyQt to build studio-wide desktop applications. Tools are built with good coding practices and scalability in mind.",
            "furtherDiscussion":"I believe automating repetitive processes doesn't take away from artists duties but actually leave a larger room for them to exercise their creativity. In my mind any redundant step in a repetitive production process that can be automated should be done so."
        },
        "examples":[
            "../../static/projects/images/project_portfolio/variousTools_01.jpg",
            "../../static/projects/images/project_portfolio/variousTools_02.jpg"
        ]
    },
    "1": {
        "title": "Procedural Shapes",
        "subTitle": "Procedural Shape Creation in Houdini",
        "description": {
            "motivation":"I am a big fan of infographics or interface design elements especially for feature film. Given the looser constraints of the medium, graphic artists creating work for movies have been pushing the boundaries of visual complexity. Having said that I never made the connection between creation of these images and the tools that I use for visual effects until reading an excellent article from Jtnimoy (http://jtnimoy.net/?q=178) about the creation of such graphics in Tron. What I found really interesting was how they ended up re-creating some of the graphics that were initially created in Openframeworks and/or Processing in Sidefx Houdini. So I ended up setting up couple of tools in Houdini for my own amusement to facilitate the procedural creation of such effects.",
            "technique":"I have built each tool using the 'foreach Sop' or using Python Sop at times for custom functionality. The idea was to create visual complexity by re-iterating a shape, each time with different parameterization. These digital assets allow for creation of infinitely many different shapes by adjusting it's parameters.",
            "furtherDiscussion":"Houdini is an exciting tool that not allows for creation of any complex scene, object or effects and also for creation of systems (or assets) that encapsulatates the underlying process for modularization and repeatability"
        },
        "examples":[
            "../../static/projects/images/project_portfolio/houdini_01.jpg",
            "../../static/projects/images/project_portfolio/houdini_02.jpg"
        ]
    },
    "2": {
        "title": "Movie Title Translations",
        "subTitle": "A Quantitative Analysis of Movie Title Translations",
        "link":"",
        "description": {
            "motivation":"aaaa",
            "technique":"bbbb",
            "furtherDiscussion":"ccc"
        }
    },
    "3": {
        "title": "sQuery",
        "subTitle": "a jQuery-like Library for 3d Applications",
        "link":"https://github.com/hibernationTheory/sQuery",
        "description": {
            "motivation":"As a visual effects artist who is immensely interested in Modern Web Development I found myself in a unique position to bridge ideas in between these two seemingly, but not so much, separated domains. One idea that is result of that exposure is sQuery, a jQuery like library for querying and modifying scenes in 3d Applications using their corresponding APIâ€™s. Given how deep the scene hierarchies can get in 3d programs for complex scenes, it is puzzling to me that such a library have not been developed before.",
            "technique":"This project not only allowed me to import ideas from modern web development into Visual Effects but also techniques from Javascript to Python. I found myself fascinated by some of the Javascript patterns, like the high emphasis on functions as callbacks due to their first class object status and hence functional programming. This greater emphasis on functions in JS made finally realise and appreciate the usage of some patterns (such as decorators) in Python lot more.",
            "furtherDiscussion":"sQuery is an Open Source Project in the same vein as jQuery and it represents a similar ambition  just like it's inspiration. To be able to create a common language in between different 3d Applications. The framework is established so that it can be rather easily extend to any other application that supports a Python interface."
        }
    },
    "4": {
        "title": "Project Route",
        "subTitle": "A Social - Location based Story Telling Web Application",
        "description": {
            "motivation":"aaaa",
            "technique":"bbbb",
            "furtherDiscussion":"ccc"
        },
        "examples":[
            "../../static/projects/images/project_portfolio/route_01.gif"
        ]
    }
}