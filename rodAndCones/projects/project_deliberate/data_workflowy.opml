<?xml version="1.0"?>
<opml version="2.0">
  <head>
    <ownerEmail>3boyutlutasarim@gmail.com</ownerEmail>
  </head>
  <body>
    <outline text="TOPICS" >
      <outline text="ANGULARJS" >
        <outline text="Description" >
          <outline text="AngularJS is a structural framework for dynamic web apps. It lets you use HTML as your template language and lets you extend HTML's syntax to express your application's components clearly and succinctly. Angular's data binding and dependency injection eliminate much of the code you would otherwise have to write. And it all happens within the browser, making it an ideal partner with any server technology." /></outline>
        <outline text="Reason" >
          <outline text="There is a strong market incentive for learning Angular. Being the hip front-end framework of late times, there are lots of projects utilizing it. Also it really makes it easy to create data bound elements removing the need for some laborious and repetitive front end coding. It can almost said to make development fun. Except that it apparently doesn't. As web applications get more demanding and complex the behind the scenes magic of Angular is said to become an impediment." /></outline>
        <outline text="Summary" >
          <outline text="There is a strong market incentive for learning Angular. Being the hip front-end framework of late times, there are lots of projects utilizing it. Also it really makes it easy to create data bound elements removing the need for some laborious and repetitive front end coding. It can almost said to make development fun. Except that it apparently doesn't. As web applications get more demanding and complex the behind the scenes magic of Angular is said to become an impediment." /></outline>
        <outline text="Rating" >
          <outline text="6.8" />
          <outline text="Angular in my opinion seems awesome. But it is too divisive and undependable to have a higher rating. Also it is main selling point (being hip) is under attack by new contenders. Definitely not a core competency but very good to have." /></outline>
        <outline text="Status" >
          <outline text="Active" />
          <outline text="Trying to utilize it in my projects. But also trying to avoid going too deep into it. The primary reason being the imminent launch of Angular 2.0, which is changing the framework in very fundamental ways." /></outline>
        <outline text="Plan" >
          <outline text="Look into integration of Django and Angular" /></outline>
        <outline text="Dependencies" >
          <outline text="Javascript" /></outline>
        <outline text="Related" >
          <outline text="Backbone" />
          <outline text="React" />
          <outline text="Knockout" /></outline>
        <outline text="Tags" >
          <outline text="Web development" />
          <outline text="front-end framework" />
          <outline text="MVC Framework" />
          <outline text="Javascript" />
          <outline text="Google" /></outline>
        <outline text="Resources" >
          <outline text="Books" >
            <outline text="Angularjs UI Development" >
              <outline text="https://www.packtpub.com/web-development/angularjs-ui-development?utm_source=Sentori&amp;amp;utm_medium=Email&amp;amp;utm_campaign=DotD+19th+March+2015" /></outline>
            <outline text="Mastering Web Application Development with AngularJS" >
              <outline text="http://www.goodreads.com/book/show/18895765-mastering-web-application-development-with-angularjs" /></outline>
            <outline text="D3 on Angular" >
              <outline text="https://leanpub.com/d3angularjs" /></outline>
          </outline>
          <outline text="Online" >
            <outline text="udemy - angularjs single page app in 1 hour" >
              <outline text="https://www.udemy.com/angularjs-crash-course/" /></outline>
            <outline text="another article about d3 and angular" >
              <outline text="http://odiseo.net/angularjs/proper-use-of-d3-js-with-angular-directives" /></outline>
            <outline text="an angular &amp;amp; d3 application" >
              <outline text="http://www.delimited.io/blog/2014/7/16/d3-directives-in-angularjs" /></outline>
            <outline text="udemy - angularjs jumpstart with dan wahlin" />
            <outline text="udemy - build a real time web app in node.js, angular.js and mongo.db" /></outline>
        </outline>
        <outline text="Links" >
          <outline text="official documentation" >
            <outline text="https://docs.angularjs.org/guide/introduction" /></outline>
        </outline>
      </outline>
      <outline text="DJANGO" >
        <outline text="Description" />
        <outline text="Reason" >
          <outline text="Django is the framework that I have entered the world of web development with. To me it is a platform that gives me the opportunity to quickly deploy ideas online. Also being the baseline of my backend knowledge, it frames all the other new ideas for me as they get introduced. I eventually want to acquire more knowledge of backend tools and frameworks such as Node as they seem to currently have more prevalence. But meanwhile Django still serves as a strong platform to keep growing in." /></outline>
        <outline text="Summary" />
        <outline text="Rating" >
          <outline text="8" /></outline>
        <outline text="Status" >
          <outline text="Active. " />
          <outline text="I would like to refresh my old knowledge of Django and update it for the current version. I also would like to structure my further knowledge acquisition. Not planning to go too deep with it though. Just have enough of it so that it can serve as a strong foundation for front end projects. But I need to find out how to create restful websites using Django to familiarize myself with the concept." /></outline>
        <outline text="Plan" >
          <outline text="Skim 'Tango with Dango' to update your knowledge of it." />
          <outline text="Look into web resources for Django and Angular integration" />
          <outline text="Go through the documentation of Django Rest Framework" />
          <outline text="Look into 'Restful' Chapters from the book 'Lightweight Django'" /></outline>
        <outline text="Dependencies" >
          <outline text="Python" /></outline>
        <outline text="Related" >
          <outline text="Express (a Node based Back-end Framework)" /></outline>
        <outline text="Tags" >
          <outline text="Python, Back-end, Web Development" /></outline>
        <outline text="Resources" >
          <outline text="Books" >
            <outline text="Lightweight Django" />
            <outline text="Tango with Django" /></outline>
          <outline text="Online" >
            <outline text="Django Rest Framework" />
            <outline text="Angular - Django Integration" /></outline>
        </outline>
        <outline text="Further Links" /></outline>
      <outline text="BOOTSTRAP" >
        <outline text="Current Status" >
          <outline text="This just became active since my next project files are making use of bootstrap." /></outline>
        <outline text="Reason" >
          <outline text="Job requires it" /></outline>
        <outline text="Resources" >
          <outline text="https://www.udemy.com/learn-bootstrap-development-by-building-10-projects/?dtcode=mJa1BMI2SGyH" />
          <outline text="https://www.edx.org/course/introduction-bootstrap-tutorial-microsoft-dev203x#.VQrsUEBDvgg" />
          <outline text="tutsplus have two bootstrap tutorials that you have" >
            <outline text="intro to bootstrap 3" />
            <outline text="bootstrap for designers" /></outline>
        </outline>
        <outline text="Interest Points" />
        <outline text="Project Ideas" /></outline>
      <outline text="CSS3" >
        <outline text="Description" />
        <outline text="Reason" >
          <outline text="CSS provides the web designer / developer with immense expressive power over the styling of the elements. When done right it really has the potential to make a significant difference in the presentation of a project. Even though the basic knowledge of CSS is easy to acquire, becoming comfortable with it requires practice." /></outline>
        <outline text="Summary" />
        <outline text="Rating" >
          <outline text="7" />
          <outline text="CSS is pretty essential and a knowledge that is assumed to be mastered for any front-end developer. Though it is not something that you can get better by just reading about, it is a skill that is developed over time." /></outline>
        <outline text="Status" >
          <outline text="Active" />
          <outline text="I am currently working on simple projects that require lots of CSS work. This provides the right incentives to enhance my knowledge in CSS further." />
          <outline text="Plan" >
            <outline text="Try to acquire tidbits of CSS information every day. Some interesting resources are:" >
              <outline text="tutsplus - css noob to ninja - http://code.tutsplus.com/tutorials/css-noob-to-ninja--net-12186" >
                <outline text="You can try to watch a video from this everyday, they are pretty quick." /></outline>
              <outline text="atozcss - http://www.atozcss.com/" >
                <outline text="This has small videos as well on subjects of interest" /></outline>
              <outline text="Lea Verou" >
                <outline text="has couple of talks about CSS, check them out." />
                <outline text="also has a book that covers the subjects of those books." /></outline>
              <outline text="a pretty comprehensive article about css" >
                <outline text="http://davidwalsh.name/starting-css" /></outline>
              <outline text="an interactive tutorial for css. might be worth going over." >
                <outline text="http://css-101.org/" /></outline>
              <outline text="Solved by Flexbox" >
                <outline text="https://philipwalton.github.io/solved-by-flexbox/" />
                <outline text="https://news.ycombinator.com/item?id=9587627" /></outline>
              <outline text="Flexbox in 5 minutes" >
                <outline text="http://flexboxin5.com/" /></outline>
              <outline text="Grid Systems" /></outline>
          </outline>
        </outline>
        <outline text="Dependencies" >
          <outline text="HTML" /></outline>
        <outline text="Related" >
          <outline text="Sass" />
          <outline text="Less" />
          <outline text="Bootstrap" /></outline>
        <outline text="Tags" >
          <outline text="Front-End Web Development" />
          <outline text="Stylesheets" />
          <outline text="Design" /></outline>
        <outline text="Resources" /></outline>
      <outline text="GIT" >
        <outline text="git init" >
          <outline text="create a new git repo." />
          <outline text="it can be used to convert an existing, unversioned project to a git repo or initialize an empty one." />
          <outline text="usually the first command you would run in a new project." />
          <outline text="you wouldn't use git init if you plan to clone a project, you would use git clone in that case." />
          <outline text="other" >
            <outline text="git init &amp;lt;directory&amp;gt;" >
              <outline text="initializes a empty git repo" /></outline>
            <outline text="git init --bare &amp;lt;directory&amp;gt;" >
              <outline text="initilazes and empty shared git repo. (this is how our projects in x are.)" />
              <outline text="way to mark a repo as a storage facility vs. a development environment. At this point git prohibits you from overriding files in the cetral repo." />
              <outline text="repos that are created by the git init --bare command have the .git suffix at the end." /></outline>
          </outline>
        </outline>
        <outline text="git clone" >
          <outline text="copies an existing Git repo. " />
          <outline text="also for your convenience cloning operation creates a remote connection called origin pointing back to the original repo. This makes it very easy to interact with central repo." />
          <outline text="git clone &amp;lt;repo&amp;gt;" />
          <outline text="git clone &amp;lt;repo&amp;gt; &amp;lt;directory&amp;gt;" >
            <outline text="creates a clone on the target dir." /></outline>
        </outline>
        <outline text="git config" />
        <outline text="git add" >
          <outline text="adds a change in the working directory to staging area, though changes are not saved until 'git commit'" />
          <outline text="git add &amp;lt;file&amp;gt;" />
          <outline text="git add &amp;lt;directory&amp;gt;" />
          <outline text="splitting your commits to logical pieces - creating atomic commits - so it is easy to track down bugs and revert changes with minimal impact is important." /></outline>
        <outline text="git commit" >
          <outline text="git commit " >
            <outline text="commits the staged snapshot, launches a text editor for you to enter a message" /></outline>
          <outline text="git commit -m &quot;&amp;lt;message&amp;gt;&quot;" >
            <outline text="allows you enter a commit message without launching a text editore" /></outline>
          <outline text="git commit -a " >
            <outline text="commits a snapshot of all the changes in the working directory to those files that are tracked." /></outline>
          <outline text="git commit architecture defers interacting with the central repo until you are ready. So the commits you make are saved in your local." />
          <outline text="git doesn't commit 'differences' it commits the entire file in each commit. this makes git much faster since files are not assembled from its diffs." />
          <outline text="so the followed convention for git messages is that first line is a sumamry of the commit in less than 50 chars, leave a blank new line and then detail the changes with dashes in front of each of them." />
          <outline text="many devs like to use present tense in their commit messages which makes commits read more like actions  and which makes history re-writing actions more intuitive." /></outline>
        <outline text="git status" >
          <outline text="displays the status of the working dir and the staging area." />
          <outline text=".gitignore is the file where you can ignore things." /></outline>
        <outline text="git log" >
          <outline text="displays the status of the committed history." />
          <outline text="git log" >
            <outline text="space to scroll, q to exit" /></outline>
          <outline text="git log -n &amp;lt;limit&amp;gt;" >
            <outline text="displays the history with a limit" /></outline>
          <outline text="git log --oneline" >
            <outline text="condenses each commit to a one line, useful for getting a high level view of a project" /></outline>
        </outline>
      </outline>
      <outline text="REACT" >
        <outline text="Current Status" >
          <outline text="Active, watching the egghead videos." />
          <outline text="Is a tiny bit invalidated by the fact that you are not on the react project." /></outline>
        <outline text="Reasons" >
          <outline text="It is awesome?" />
          <outline text="Your job requires it." /></outline>
        <outline text="Resources" >
          <outline text="Egghead videos are pretty awesome" />
          <outline text="front end masters came up with a tutorial as well: https://frontendmasters.com/courses/react/" />
          <outline text="d3 and js integration can be interesting" /></outline>
        <outline text="Project Ideas" >
          <outline text="React + d3 for digital asset awesomeness." /></outline>
      </outline>
      <outline text="D3" />
      <outline text="LINUX" >
        <outline text="Description" />
        <outline text="Current Status" >
          <outline text="I am planning on doing this for an hour on the weekend. Maybe watch the video, so that you can have basic understanding of it. Then you can build on it gradually." /></outline>
        <outline text="Resources" >
          <outline text="https://www.udemy.com/linux-command-line-volume1/?signup_success=1" />
          <outline text="http://cli.learncodethehardway.org/book/" />
          <outline text="http://lifehacker.com/how-can-i-quickly-learn-terminal-commands-1494082178" /></outline>
      </outline>
      <outline text="HTTP" >
        <outline text="Treehouse seems to have good course going for the http essentials" /></outline>
      <outline text="SUBLIME" >
        <outline text="Current Status" >
          <outline text="Active." /></outline>
        <outline text="Reasons" >
          <outline text="Getting efficient in your text editor can have a huge payoff." /></outline>
        <outline text="Resources" >
          <outline text="http://www.hongkiat.com/blog/sublime-text-plugins/" />
          <outline text="https://code.tutsplus.com/tutorials/essential-sublime-text-2-plugins-and-extensions--net-24173" /></outline>
        <outline text="Interest Points" />
        <outline text="Project Ideas" /></outline>
      <outline text="JAVASCRIPT" >
        <outline text="Current Status" >
          <outline text="did start functional programming in JS but this kind of hit a wall as subjects escaleted quickly. need to look into currying for python to build a better understanding on the functional aspects of things" />
          <outline text="other thant that you have the basic understanding of the basics and even intermediate stuff. You just need to practice." /></outline>
        <outline text="Reasons" >
          <outline text="It is pretty fundemental, relevant to your active projects and will help you make a shift t oCS51 with the functional aspect of it." />
          <outline text="It is now your primary language." /></outline>
        <outline text="Resources" >
          <outline text="VIDEO" >
            <outline text="Codeschool - Javascript Roadtrip" />
            <outline text="JavaScript the Good Parts" />
            <outline text="TutsPlus - Advanced JavaScript Fundamentals" />
            <outline text="Frontend Masters - Hardcore Functional Programming in JavaScript" /></outline>
          <outline text="javascript design patterns" />
          <outline text="object oriented JS." /></outline>
        <outline text="Interest Points" >
          <outline text="See D3.JS, Three.JS and Node.JS" /></outline>
      </outline>
      <outline text="GULP" />
      <outline text="PYTHON" >
        <outline text="Resources" >
          <outline text="core python programming" >
            <outline text="ilk 14 chapter" />
            <outline text="anki them" />
            <outline text="django ile alakali konular oncelik alabilir:" >
              <outline text="regular expressions" />
              <outline _complete="true" text="database programming" /></outline>
          </outline>
          <outline text="http://www.toptal.com/python/top-10-mistakes-that-python-programmers-make" >
            <outline text="https://news.ycombinator.com/item?id=7715349" /></outline>
          <outline text="video" >
            <outline text="pycon 2015" >
              <outline text="making beautiful graphs with Python " >
                <outline text="https://www.youtube.com/watch?v=9F_kkf7CDQs" /></outline>
              <outline text="machine learning with scikit" >
                <outline text="https://www.youtube.com/watch?v=L7R4HUQ-eQ0" />
                <outline text="https://www.youtube.com/watch?v=oGqGxvqA9-k" /></outline>
              <outline text="bayesian statistics made simple" >
                <outline text="https://www.youtube.com/watch?v=5W715nfJNJw" /></outline>
              <outline text="statistical inference with computational methods" >
                <outline text="https://www.youtube.com/watch?v=5Vjrqnk7Igs" /></outline>
              <outline text="" /></outline>
            <outline text="https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-0#.VQrsZkBDvgg" />
            <outline text="https://www.edx.org/course/introduction-computational-thinking-data-mitx-6-00-2x-0#.VQrsWkBDvgg" />
            <outline text="roughly in this order:" >
              <outline text="hands on beginning python" >
                <outline text="need to anki this" /></outline>
              <outline text="hands on intermediate python" />
              <outline text="python epiphanies" />
              <outline text="decorators" />
              <outline text="computer science fundamentals for self-taught programmers" />
              <outline text="so you want to be a full stack developer" /></outline>
          </outline>
          <outline text="this book seems to be awesome, where you were referring to the sorting stuff" >
            <outline text="Problem Solving with Algorithms and Data Structures Using Python SECOND EDITION" /></outline>
        </outline>
        <outline text="Functional programming in Python" />
        <outline text="Django" />
        <outline text="Currying" /></outline>
      <outline text="NODE" />
      <outline text="JQUERY" >
        <outline text="Reasons" >
          <outline text="It is pretty fundemantal, almost essential knowledge." />
          <outline text="it feeds into JS but also helps with your project." /></outline>
        <outline text="Resources" >
          <outline text="tutsplus jquery course is pretty amazing actually, I am pleasantly surprised." /></outline>
        <outline text="Current Status" >
          <outline text="this kind of hit a wall, I think I have mastered the basics but moving forward will be slower. Need practice." />
          <outline text="You have well understanding of the basics." /></outline>
      </outline>
      <outline text="THREEJS" >
        <outline text="learning paths" >
          <outline text="dat udacity (or edx?) course on interactive 3d graphics" />
          <outline text="pluralsight course" /></outline>
        <outline text="reference" >
          <outline text="#awesome http://idflood.github.io/ThreeNodes.js/index_optimized.html#" />
          <outline text="#awesome https://github.com/idflood/ThreePlanet.js" />
          <outline text="#awesome - http://www.ianww.com/" /></outline>
      </outline>
      <outline text="HOUDINI" />
      <outline text="COMPASS" />
      <outline text="SASS" />
      <outline text="UX" >
        <outline text="Resources" >
          <outline text="don't make me think" /></outline>
      </outline>
      <outline text="HARVARD EXTENSION" >
        <outline text="CS050 - Intensive Introduction to Computer Science" >
          <outline text="Course Videos / Website" >
            <outline text="http://cs50.tv/2014/fall/" /></outline>
          <outline text="C Programming Absolute Beginner's Guide" >
            <outline text="http://www.amazon.ca/Programming-Absolute-Beginners-Guide-Edition/dp/0789751984" /></outline>
        </outline>
        <outline text="CS51 - Abstraction and Design in Computation " >
          <outline text="Course Website" >
            <outline text="http://www.extension.harvard.edu/courses/abstraction-design-computation" /></outline>
          <outline text="Video" >
            <outline text="Introduction to Functional Programming by EdX (uses Haskell)" >
              <outline text="https://www.edx.org/course/introduction-functional-programming-delftx-fp101x#.VJdVzV4AAA" /></outline>
            <outline text="Hardcore Functional Programming in JS" >
              <outline text="https://frontendmasters.com/courses/functional-javascript/" /></outline>
          </outline>
          <outline text="Book" >
            <outline text="http://ocaml-book.com/" /></outline>
        </outline>
        <outline text="CS207 - Systems Development for Computational Science" >
          <outline text="Course Videos" >
            <outline text="http://isites.harvard.edu/icb/icb.do?keyword=k105660&amp;amp;pageid=icb.page695343" /></outline>
          <outline text="Recommended Reading" >
            <outline text="Design Patterns: Elements of Reusable Object-Oriented Software - Gamma, Johnson, Vlissides, Booch" />
            <outline text="Introduction to Algorithms - Cormen, Leiserson, Rivest, Stein" />
            <outline text="The C++ Programming Language - Stroustrup" />
            <outline text=" The Pragmatic Programmer - Hunt, Thomas" />
            <outline text="Software Fundamentals - Parnas" />
            <outline text="The Mythical Man Month and The Design of Design - Brooks" />
            <outline text="On System Design - Waldo" />
            <outline text="Hints on System Design - Lampson" /></outline>
        </outline>
        <outline text="CSCI E-121 Introduction to the Theory of Computation" >
          <outline text="Website" >
            <outline text="http://www.extension.harvard.edu/courses/introduction-theory-computation" /></outline>
          <outline text="Course Videos:" >
            <outline text="https://cm.dce.harvard.edu/2015/01/14302/publicationListing.shtml" /></outline>
          <outline text="Book" >
            <outline text="Introduction to the Theory of Computation" >
              <outline text="http://www.amazon.ca/Introduction-Theory-Computation-Michael-Sipser/dp/0534950973" /></outline>
            <outline text="Discrete Math Related Books" >
              <outline text="how to do proofs" />
              <outline text="discrete mathematics and its applciations" />
              <outline text="computers and intractability" /></outline>
          </outline>
          <outline text="Quora Advice - http://www.quora.com/What-is-it-like-to-take-CS-121-Introduction-to-the-Theory-of-Computation-at-Harvard" >
            <outline text="The stated prerequisite for CS 121 is not CS 20, but &quot;experience in formal mathematics at the level of Computer Science 20.&quot;  Accordingly, you do not actually need to know all the material covered in CS 20; graphs, boolean formulas, growth rates of functions and the like may come up in a few lectures or homework problems, but not so much that you would not be able to pick those up as you go along." />
            <outline text="What's important is that you have some &quot;mathematical maturity.&quot;  Most of the problems on the problem sets ask you to write formal mathematical proofs, and there are a lot of proofs by induction.  We also give formal definitions of different objects (finite-state automata, context-free grammars, Turing machines and the like); you need to be able to go from the formal definition to an intuitive understanding so that you can solve problems that involve manipulating those objects in some way.  If you're not familiar with formal mathematics in this way, you might want to take CS 20, or you should expect to put in some extra time (particularly at the beginning of the course)." />
            <outline text="As far as doing well, the same advice as for any other course applies:  Try to understand the material as you go along, and make use of the professor's and teaching fellows' office hours, your peers in the class, the course Piazza, textbook, and other resources.  The course does get somewhat more difficult as the semester progresses, so if you're struggling before the add-drop deadline (or if you're not sure whether to take the course in the first place), consider telling the professor or TFs about your specific background and they'll be able to give more personalized advice." /></outline>
        </outline>
        <outline text="CS 152 - Programming Languages" >
          <outline text="Website" >
            <outline text="http://www.seas.harvard.edu/courses/cs152/2015sp/" /></outline>
          <outline text="Prerequisites" >
            <outline text="Computer Science 51. Also recommended is Computer Science 121. Students must havegood programming skills, be &lt;b&gt;very comfortable&lt;/b&gt; with recursion, basic mathematical ideas and notations, including sets, relations, functions, and induction. See theschedule for some suggested background reading on some of these concepts. Feel free to contact the instructor if you have questions about the requirements or other aspects of the course." /></outline>
          <outline text="Recommended Reading" >
            <outline text="&quot;Types and Programming Languages&quot; by Benjamin C. Pierce, MIT Press, 2002." />
            <outline text="&quot;Practical Foundations for Programming Languages&quot; by Robert Harper, Cambridge University Press, 2013." />
            <outline text="&quot;Concepts in Programming Languages&quot; by John C. Mitchell, Cambridge University Press, 2003." />
            <outline text="&quot;The Formal Semantics of Programming Languages&quot; by Glynn Winskel, MIT Press, 1993." />
            <outline text="&quot;Programming Languages: Application and Interpretation&quot; by Shriram Krishnamurthi." /></outline>
        </outline>
        <outline text="CSCI E-124 Data Structures and Algorithms" >
          <outline text="Website" >
            <outline text="http://www.extension.harvard.edu/courses/data-structures-algorithms" /></outline>
          <outline text="Prerequisite" >
            <outline text="Some mathematical maturity also will be expected; students should have some idea of what constitutes a mathematical proof and how to write one. Some knowledge of basic probability will also be helpful." /></outline>
          <outline text="Recommended Books" >
            <outline text="Introduction to Algoriths (Stein)" />
            <outline text="Algorithm Design (Tardos)" /></outline>
        </outline>
      </outline>
      <outline text="PHYSICSJS" />
      <outline text="HTML5" >
        <outline text="grid systems" >
          <outline text="http://webdesign.tutsplus.com/articles/build-a-freshly-squeezed-responsive-grid-system--webdesign-14888" />
          <outline text="http://j4n.co/blog/Creating-your-own-css-grid-system" />
          <outline text="https://css-tricks.com/dont-overthink-it-grids/" />
          <outline text="http://www.sitepoint.com/understanding-css-grid-systems/" />
          <outline text="http://hugogiraudel.com/2013/03/04/css-grids/" /></outline>
      </outline>
      <outline text="FUNCTIONAL_PROGRAMMING" >
        <outline text="https://www.edx.org/course/delftx/delftx-fp101x-introduction-functional-2126#.VFFYAEBDvgg" />
        <outline text="http://stackoverflow.com/questions/1017621/why-isnt-python-very-good-for-functional-programming" />
        <outline text="https://docs.python.org/2/tutorial/datastructures.html#functional-programming-tools" />
        <outline text="https://docs.python.org/2/howto/functional.html" /></outline>
      <outline text="ALEMBIC" >
        <outline text="http://docs.alembic.io/python/cask.html#advantages" />
        <outline text="https://groups.google.com/forum/#!forum/alembic-discussion" /></outline>
      <outline text="SHADING" >
        <outline text="http://forums.odforce.net/topic/20682-bsdf-bonanza-ggx-microfacets-disney-brdf-and-more/" /></outline>
      <outline text="COMPUTER_SCIENCE" >
        <outline text="this looks interesting, a bit similar to cs51 but taught in c++ : https://www.udemy.com/cs-106b-programming-abstractions/ " >
          <outline text="and here is the syllabius for it might be a good way to get into c++ : http://web.stanford.edu/class/cs106b/lectures.shtml" /></outline>
        <outline text="resources" >
          <outline text="googles recommended resources" >
            <outline text="https://www.google.com/about/careers/students/guide-to-technical-development.html" /></outline>
        </outline>
      </outline>
      <outline text="MISC" >
        <outline text="LESSONS/TRENDS FROM JOB APPLICATIONS" >
          <outline text="I HAVE NO IDEA" >
            <outline text="Blog - Share" />
            <outline text="UX" />
            <outline text="mysql" >
              <outline text="twg" /></outline>
            <outline text="Node.js" >
              <outline text="myplanet, eventmobi, twg, dashboard, flashstock, crowdlinker" /></outline>
            <outline text="ember.js" >
              <outline text="chango" /></outline>
            <outline text="Rest" />
            <outline text="Backbone.js" >
              <outline text="chango, idea coututre, crowdlinker, myplanet" /></outline>
            <outline text="a JS MV* frmework" >
              <outline text="angular being one!" /></outline>
            <outline text="Angular" >
              <outline text="architech, twg, chango, flashstock, crowdlinker" /></outline>
          </outline>
          <outline text="I HAVE SOME IDEA" >
            <outline text="API's - facebook, googlemaps." />
            <outline text="Solid Knowledge of HTML, CSS, JS, JQuery" />
            <outline text="Bootstrap +2" />
            <outline text="OOP" />
            <outline text="SASS +2" /></outline>
        </outline>
      </outline>
      <outline text="BOWER" />
      <outline text="LESS" />
      <outline text="NPM" />
      <outline text="SCRUM" /></outline>
  </body>
</opml>